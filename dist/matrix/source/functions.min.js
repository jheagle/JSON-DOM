"use strict";require("core-js/modules/es.symbol.js"),require("core-js/modules/es.symbol.description.js"),require("core-js/modules/es.object.to-string.js"),require("core-js/modules/es.symbol.iterator.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/es.array.slice.js"),require("core-js/modules/es.function.name.js"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDomItemFromElement=exports.getPointFromElement=exports.adjacentEdgePoints=exports.adjacentPoints=exports.getAllPoints=exports.getDomItemFromPoint=exports.checkValidPoint=exports.randDirection=exports.getAxisLengths=exports.checkInBetween=exports.testPointsBetween=exports.getPointsLines=exports.getPointsLine=exports.lineEndPoint=exports.randomStart=exports.pointsToDirection=exports.getFirstAxisOfCoordinate=exports.getHighestAbsoluteCoordinate=exports.areEqualPoints=exports.pointDifference=exports.nextCell=exports.bindPointData=void 0,require("core-js/modules/es.array.map.js"),require("core-js/modules/es.object.assign.js"),require("core-js/modules/es.array.filter.js"),require("core-js/modules/es.object.keys.js"),require("core-js/modules/es.array.concat.js"),require("core-js/modules/es.array.reduce.js"),require("core-js/modules/es.array.index-of.js"),require("core-js/modules/es.array.from.js"),require("core-js/modules/es.string.iterator.js");const _functionalHelpers=_interopRequireDefault(require("functional-helpers")),_objects=require("./objects");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(!e)return;if("string"==typeof e)return _arrayLikeToArray(e,t);let n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const bindPointData=function e(t){const n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,_objects.point)(0,0,0);return _functionalHelpers.default.mergeObjects(t,t.point?{point:_functionalHelpers.default.cloneObject(n)}:{children:t.children.map((function(t,o){return e(t,Object.assign(n,_defineProperty({},t.axis,o)))}))})};exports.bindPointData=bindPointData;const nextCell=function(e,t){return(0,_objects.point)(e.x+t.x,e.y+t.y,e.z+t.z)};exports.nextCell=nextCell;const pointDifference=function(e,t){return(0,_objects.point)(t.x-e.x,t.y-e.y,t.z-e.z)};exports.pointDifference=pointDifference;const areEqualPoints=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z};exports.areEqualPoints=areEqualPoints;const getHighestAbsoluteCoordinate=function(e){return _functionalHelpers.default.reduceObject(e,_functionalHelpers.default.getAbsoluteMax,0)};exports.getHighestAbsoluteCoordinate=getHighestAbsoluteCoordinate;const getFirstAxisOfCoordinate=function(e,t){return Object.keys(e).filter((function(n){return e[n]===t}))[0]||!1};exports.getFirstAxisOfCoordinate=getFirstAxisOfCoordinate;const pointAndCoordinateToDirection=function(e,t){return!1!==(n=getFirstAxisOfCoordinate(e,t))?_functionalHelpers.default.mergeObjects((0,_objects.point)(0,0,0),_defineProperty({},"".concat(n),t>0?1:-1)):(0,_objects.point)(0,0,0);var n},pointToDirection=function(e){return pointAndCoordinateToDirection(e,getHighestAbsoluteCoordinate(e))},pointsToDirection=function(e,t){return n=pointDifference(e,t),pointAndCoordinateToDirection(n,getHighestAbsoluteCoordinate(n));var n};exports.pointsToDirection=pointsToDirection;const randomStart=function(e,t){const n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,_objects.point)(10,10,10);return(0,_objects.point)(_functionalHelpers.default.randomInteger(n.x-(e-1)*t.x),_functionalHelpers.default.randomInteger(n.y-(e-1)*t.y),_functionalHelpers.default.randomInteger(n.z-(e-1)*t.z))};exports.randomStart=randomStart;const lineEndPoint=function(e,t,n){return(0,_objects.point)(e.x+n.x*(t-1),e.y+n.y*(t-1),e.z+n.z*(t-1))};exports.lineEndPoint=lineEndPoint;const getPointsLine=function e(t,n){const o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return areEqualPoints(t,n)?o.concat([t]):e(nextCell(t,pointsToDirection(t,n)),n,o.concat([t]))};exports.getPointsLine=getPointsLine;const getPointsLines=function(e){return e.reduce((function(e,t){return e.concat(getPointsLine.apply(void 0,_toConsumableArray(t)))}),[])};exports.getPointsLines=getPointsLines;const testPointsBetween=function(e,t,n,o){const r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];return getPointsLine(e,t).filter((function(e,t,n){return 0!==t&&t!==n.length-1||r})).reduce((function(e,t){return _functionalHelpers.default.mergeObjects(e,_defineProperty({},"".concat(o(t,n)),[t]))}),{true:[],false:[]})};exports.testPointsBetween=testPointsBetween;const checkInBetween=function(){return!!testPointsBetween.apply(void 0,arguments).true.length};exports.checkInBetween=checkInBetween;const getAxisLengths=function(e){return(0,_objects.point)(e.children[0].children[0].children.length,e.children[0].children.length,e.children.length)};exports.getAxisLengths=getAxisLengths;const randDirection=function(){const e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return e.length?e[_functionalHelpers.default.randomInteger(e.length)]:(0,_objects.point)(0,0,0)};exports.randDirection=randDirection;const checkValidPoint=function(e,t){return!!(t.children[e.z]&&t.children[e.z].children[e.y]&&t.children[e.z].children[e.y].children[e.x]&&t.children[e.z].children[e.y].children[e.x].point)};exports.checkValidPoint=checkValidPoint;const getDomItemFromPoint=function(e,t){return!!checkValidPoint(e,t)&&t.children[e.z].children[e.y].children[e.x]};exports.getDomItemFromPoint=getDomItemFromPoint;const getAllPoints=function e(t){const n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return t.point?n.concat([t.point]):t.children.reduce((function(t,n){return t.concat(e(n,[]))}),[])};exports.getAllPoints=getAllPoints;const adjacentPoints=function(e,t){return getPointsLines([[(0,_objects.point)(-1,1,1),(0,_objects.point)(1,-1,-1)],[(0,_objects.point)(1,1,1),(0,_objects.point)(-1,1,-1)],[(0,_objects.point)(-1,-1,1),(0,_objects.point)(1,-1,1)],[(0,_objects.point)(1,0,0),(0,_objects.point)(1,1,-1)],[(0,_objects.point)(-1,1,0),(0,_objects.point)(1,1,0)]]).concat([(0,_objects.point)(0,0,1),(0,_objects.point)(1,0,0),(0,_objects.point)(-1,0,-1),(0,_objects.point)(0,0,-1)]).map((function(t){return nextCell(e,t)})).filter((function(n){return checkValidPoint(nextCell(e,n),t)}))};exports.adjacentPoints=adjacentPoints;const adjacentEdgePoints=function(e,t){return[(0,_objects.point)(-1,0,0),(0,_objects.point)(1,0,0),(0,_objects.point)(0,-1,0),(0,_objects.point)(0,1,0),(0,_objects.point)(0,0,-1),(0,_objects.point)(0,0,1)].map((function(t){return nextCell(e,t)})).filter((function(e){return checkValidPoint(e,t)}))};exports.adjacentEdgePoints=adjacentEdgePoints;const getPointFromElement=function(e){return(0,_objects.point)(Array.from(e.parentNode.childNodes).indexOf(e),Array.from(e.parentNode.parentNode.childNodes).indexOf(e.parentNode),Array.from(e.parentNode.parentNode.parentNode.childNodes).indexOf(e.parentNode.parentNode))};exports.getPointFromElement=getPointFromElement;const getDomItemFromElement=function(e,t){return getDomItemFromPoint(getPointFromElement(e),t)};exports.getDomItemFromElement=getDomItemFromElement;